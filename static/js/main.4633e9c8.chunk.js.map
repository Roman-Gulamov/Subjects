{"version":3,"sources":["Components/Map/DataMap.jsx","Components/Map/checkData.js","Components/Pages/BranchesPages.js","Components/Router/RouteBranches.jsx","Components/Pages/DistrictsPages.js","Components/Router/RouteDistrict.jsx","Components/App.jsx","index.jsx"],"names":["DataMap","pageTitle","useState","parseFile","setParseFile","sortParseFile","setSortParseFile","pageId","setPageId","error","setError","axios","Axios","create","header","location","window","href","useEffect","filter","item","parent_id","map","id","title","srt","sort","prev","next","get","split","indexOf","then","response","data","toLowerCase","parseInt","getPageId","catch","className","role","aria-label","key","parentId","target","rel","checkData","FirstBranch","Helmet","charSet","SecondBranch","ThirdBranch","FourthBranch","FifthBranch","SixthBranch","SeventhBranch","EighthBranch","RouteBranches","to","path","component","Central","FarEast","NorthCaucasian","NorthWestern","Siberia","Southern","Ural","Volga","RouteDistrict","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4633e9c8.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport Axios from \"axios\";\r\n\r\nimport { checkData, getPageId } from './checkData';\r\n\r\n\r\nexport const DataMap = ({ pageTitle }) => {\r\n    const [parseFile, setParseFile] = useState([]);\r\n    const [sortParseFile, setSortParseFile] = useState([]);\r\n    const [pageId, setPageId] = useState();\r\n    const [error, setError] = useState(false);\r\n\r\n    const axios = Axios.create();\r\n    const header = {\r\n        header: {'Access-Control-Allow-Origin': 'https://rcslabs.ru/',}\r\n    }\r\n\r\n    let location = window.location.href;\r\n\r\n\r\n    useEffect(() => {\r\n        setSortParseFile(\r\n            parseFile\r\n                .filter(item => item.parent_id === pageId || item.parent_id === null)\r\n                .map(({ id, parent_id, title, srt }) => ({\r\n                    id,\r\n                    parent_id,\r\n                    title,\r\n                    srt: parent_id === null ? -1 : srt\r\n                }))\r\n                .sort((prev, next) => prev.srt - next.srt)\r\n        )\r\n    },[parseFile]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(\r\n            location.split(['/']).indexOf('branches') !== -1 ? \r\n                'https://rcslabs.ru/locations2.json' :\r\n                'https://rcslabs.ru/locations.json', \r\n            header\r\n        )\r\n        .then((response) => {\r\n            setPageId(getPageId(response.data, pageTitle));\r\n            setParseFile(response.data);\r\n        })\r\n        .catch(() => {\r\n            setError(true);\r\n        })\r\n    },[]);\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-wrapper\">\r\n                    <h2 className=\"text-center\">\r\n                        <span role=\"img\" aria-label=\"cry\">&#128547;</span>\r\n                            Ошибка при загрузки\r\n                        <span role=\"img\" aria-label=\"cry\">&#128547;</span>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (!pageTitle) {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-wrapper\">\r\n                    <h2 className=\"text-center\">\r\n                        <span role=\"img\" aria-label=\"cry\">&#128557;</span>\r\n                            Не найдено \r\n                        <span role=\"img\" aria-label=\"cry\">&#128557;</span>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-wrapper\">\r\n                    {sortParseFile.map(data => (\r\n                        <Fragment key={data.id}>\r\n                            {checkData(data.parent_id, data.title, pageTitle, data.srt)}\r\n                        </Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\n\r\nexport const checkData = (parentId, title, pageTitle, srt) => {\r\n    if (parentId === null) {\r\n        return (\r\n            <>\r\n                <h2 className=\"text-center mb-4\">{title}</h2>\r\n                <h3 className=\"text-center mb-4\">{pageTitle}</h3>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"result-item\">\r\n                <a \r\n                    className=\"result-subject\"\r\n                    href={`https://yandex.ru/search/?lr=2&text=${title}`} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\" \r\n                >{`#${srt} ${title}`}\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const getPageId = (data, pageTitle) => {\r\n    let mainTitle = data.filter(item => item.title.toLowerCase() === pageTitle.toLowerCase());\r\n    let pageId = mainTitle.map(item => item.id);\r\n\r\n    return parseInt(pageId);\r\n}\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { DataMap } from '../Map/DataMap';\r\n\r\n\r\nexport const FirstBranch = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Первый филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №1\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const SecondBranch = () => {\r\n        return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Второй филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №2\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ThirdBranch = () => {\r\n        return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Третий филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №3\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const FourthBranch = () => {\r\n        return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Четвёртый филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №4\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const FifthBranch = () => {\r\n        return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Пятый филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №5\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const SixthBranch = () => {\r\n        return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Шестой филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №6\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const SeventhBranch = () => {\r\n        return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Сеьмой филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №7\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const EighthBranch = () => {\r\n        return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Восьмой филиал</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Филиал №8\"/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n    FirstBranch,\r\n    SecondBranch,\r\n    ThirdBranch,\r\n    FourthBranch,\r\n    FifthBranch,\r\n    SixthBranch,\r\n    SeventhBranch,\r\n    EighthBranch \r\n    } from '../Pages/BranchesPages';\r\n\r\n\r\nexport const RouteBranches = () => {\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Список филиалов</title>\r\n        </Helmet>\r\n        <div className=\"list-branches\">\r\n            <div className=\"container\">\r\n                    <h1 className=\"list-title title-center\">Филиалы управляющей компании</h1>\r\n                <div className=\"list-links\">\r\n                    <Router>\r\n                        <div className=\"d-flex flex-wrap\">\r\n                            <Link to=\"/branches/first-branch\">Первый</Link>\r\n                            <Link to=\"/branches/second-branch\">Второй</Link>\r\n                            <Link to=\"/branches/third-branch\">Третий</Link>\r\n                            <Link to=\"/branches/fourth-branch\">Четвёртый</Link>\r\n                            <Link to=\"/branches/fifth-branch\">Пятый</Link>\r\n                            <Link to=\"/branches/sixth-branch\">Шестой</Link>\r\n                            <Link to=\"/branches/seventh-branch\">Седьмой</Link>\r\n                            <Link to=\"/branches/eight-branch\">Восьмой</Link>\r\n                        </div>\r\n\r\n                        <Switch>\r\n                            <Route path='/branches/first-branch' component={FirstBranch}/>\r\n                            <Route path='/branches/second-branch' component={SecondBranch}/>\r\n                            <Route path='/branches/third-branch' component={ThirdBranch}/>\r\n                            <Route path='/branches/fourth-branch' component={FourthBranch}/>\r\n                            <Route path='/branches/fifth-branch' component={FifthBranch}/>\r\n                            <Route path='/branches/sixth-branch' component={SixthBranch}/>\r\n                            <Route path='/branches/seventh-branch' component={SeventhBranch}/>\r\n                            <Route path='/branches/eight-branch' component={EighthBranch}/>\r\n                            <Redirect to=\"/branches\" />\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { DataMap } from '../Map/DataMap';\r\n\r\n\r\nexport const Central = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Центральный федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Центральный федеральный округ\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const FarEast = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Дальневосточный федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Дальневосточный федеральный округ\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const NorthCaucasian = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Северо-Кавказский федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Северо-Кавказский федеральный округ\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const NorthWestern = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Северо-западный федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Северо-западный федеральный округ\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Siberia = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Сибирский федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Сибирский федеральный округ\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Southern = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Южный федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Южный федеральный округ\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Ural = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Уральский федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Уральский федеральный округ\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Volga = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Приволжский федеральный округ</title>\r\n            </Helmet>\r\n            <DataMap pageTitle=\"Приволжский федеральный округ\"/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\n\r\nimport { \r\n    Central,\r\n    NorthWestern,\r\n    Southern,\r\n    NorthCaucasian,\r\n    Volga,\r\n    Siberia,\r\n    FarEast,\r\n    Ural\r\n} from '../Pages/DistrictsPages';\r\n\r\n\r\nexport const RouteDistrict = () => {\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Список субъектов</title>\r\n        </Helmet>\r\n        <div className=\"list-districts\">\r\n            <div className=\"container\">\r\n                    <h1 className=\"list-title title-center\">Федеральные округа Российской Федерации</h1>\r\n                <div className=\"list-links\">\r\n                    <Router>\r\n                        <div className=\"d-flex justify-content-around flex-wrap\">\r\n                            <Link to=\"/districts/central\">Центральный</Link>\r\n                            <Link to=\"/districts/north-western\">Северо-Западный</Link>\r\n                            <Link to=\"/districts/southern\">Южный</Link>\r\n                            <Link to=\"/districts/north-caucasian\">Северо-Кавказский</Link>\r\n                            <Link to=\"/districts/volga\">Приволжский</Link>\r\n                            <Link to=\"/districts/ural\">Уральский</Link>\r\n                            <Link to=\"/districts/siberia\">Сибирский</Link>\r\n                            <Link to=\"/districts/far-east\">Дальневосточный</Link>\r\n                        </div>\r\n\r\n                        <Switch>\r\n                            <Route path='/districts/central' component={Central}/>\r\n                            <Route path='/districts/north-western' component={NorthWestern}/>\r\n                            <Route path='/districts/southern' component={Southern}/>\r\n                            <Route path='/districts/north-caucasian' component={NorthCaucasian}/>\r\n                            <Route path='/districts/volga' component={Volga}/>\r\n                            <Route path='/districts/ural' component={Ural}/>\r\n                            <Route path='/districts/siberia' component={Siberia}/>\r\n                            <Route path='/districts/far-east' component={FarEast}/>\r\n                            <Redirect to=\"/districts\" />\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport { RouteBranches } from './Router/RouteBranches';\nimport { RouteDistrict } from './Router/RouteDistrict';\nimport './app.scss';\n\n\nexport const App = () => {\n    return (\n        <div className=\"choise container list-links\">\n            <Router>\n                <div className=\"choise-text d-flex justify-content-around flex-wrap text-center\">\n                    <Link to=\"/districts\" className=\"text-danger\">Округа Российской Федерации</Link>\n                    <Link to=\"/branches\" className=\"text-danger\">Филиалы</Link>\n                </div>\n\n                <Switch>\n                    <Route path='/districts' component={RouteDistrict}/>\n                    <Route path='/branches' component={RouteBranches}/>\n                    <Redirect to=\"/\" />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './Components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/fonts/stylesheet.css';\nimport './index.scss';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}